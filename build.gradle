plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.3'
    id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.maal'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', "2023.0.0")
    set('awsSdkVersion', "2.24.12")
    set('awsSpringVersion', "3.1.0")
    set('mapstructVersion', "1.5.5.Final")
}

dependencies {
    // Spring Boot
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-aop'
    implementation 'org.springframework.boot:spring-boot-starter-logging'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    
    // Spring Transaction para suporte a @Transactional
    implementation 'org.springframework:spring-tx'
    
    // Spring AOP adicional para resolver problemas de dependência
    implementation 'org.springframework:spring-aop'
    implementation 'org.aspectj:aspectjweaver'
    
    // Spring Retry para suporte a @Retryable (resiliência)
    implementation 'org.springframework.retry:spring-retry'
    
    // Spring Cloud
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
    
    // Spring Cloud AWS
    implementation platform("io.awspring.cloud:spring-cloud-aws-dependencies:${awsSpringVersion}")
    implementation 'io.awspring.cloud:spring-cloud-aws-starter'
    implementation 'io.awspring.cloud:spring-cloud-aws-starter-s3'
    implementation 'io.awspring.cloud:spring-cloud-aws-starter-sqs'
    
    // AWS SDK
    implementation platform("software.amazon.awssdk:bom:${awsSdkVersion}")
    implementation 'software.amazon.awssdk:s3'
    implementation 'software.amazon.awssdk:s3-transfer-manager'
    implementation 'software.amazon.awssdk:url-connection-client'
    implementation 'software.amazon.awssdk:sqs'
    implementation 'software.amazon.awssdk:dynamodb'
    implementation 'software.amazon.awssdk:dynamodb-enhanced'
    
    // Cliente HTTP Netty para AWS SDK (necessário para configurações otimizadas de timeout)
    implementation 'software.amazon.awssdk:netty-nio-client'
    
    // DynamoDB Enhanced specific dependencies
    implementation 'software.amazon.awssdk:dynamodb-enhanced:2.24.12'
    annotationProcessor 'software.amazon.awssdk:dynamodb-enhanced:2.24.12'
    
    // MapStruct
    implementation "org.mapstruct:mapstruct:${mapstructVersion}"
    annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
    
    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor "org.projectlombok:lombok-mapstruct-binding:0.2.0"
    
    // Logging - garante que SLF4J tenha um provider
    implementation 'ch.qos.logback:logback-classic'
    implementation 'org.slf4j:slf4j-api'
    
    // Test dependencies
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation platform("software.amazon.awssdk:bom:${awsSdkVersion}")
    testImplementation 'org.testcontainers:junit-jupiter'
    testImplementation 'org.testcontainers:localstack'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}
