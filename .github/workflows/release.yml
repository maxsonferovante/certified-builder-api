name: Gerenciamento de Tags e Releases

on:
  push:
    branches:
      - main
  workflow_dispatch:  # Permite execução manual do workflow

permissions:
  contents: write  # Concede permissão explícita para criar tags e releases

jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout do repositório
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Configurar Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
      
      - name: Criar e enviar tag de versão
        id: create-tag
        run: |
          # Obtém a data atual no formato YYYYMMDD
          DATE_VERSION=$(date +'%Y%m%d')
          # Conta quantas tags existem com o prefixo da data atual
          TAG_COUNT=$(git tag -l "v${DATE_VERSION}.*" | wc -l)
          # Incrementa o contador para a nova tag
          TAG_COUNT=$((TAG_COUNT + 1))
          # Cria o nome da nova tag
          NEW_TAG="v${DATE_VERSION}.${TAG_COUNT}"
          # Cria a tag localmente
          git tag -a ${NEW_TAG} -m "Release ${NEW_TAG}"
          # Envia a tag para o repositório remoto
          git push origin ${NEW_TAG}
          echo "Nova tag criada: ${NEW_TAG}"
          echo "tag=${NEW_TAG}" >> $GITHUB_OUTPUT
      
      - name: Criar Release no GitHub
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.create-tag.outputs.tag }}
          name: "Release ${{ steps.create-tag.outputs.tag }}"
          body: |
            ## Release Notes
            
            Esta release foi gerada automaticamente após alterações na branch main.
            
            ### Últimos Commits:
            ${{ github.event.head_commit.message }}
            
            ### Autor:
            ${{ github.event.head_commit.author.name }}
            
            ### Data:
            ${{ github.event.head_commit.timestamp }}
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 