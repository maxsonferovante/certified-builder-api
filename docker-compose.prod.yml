version: "3.9"

services:
  traefik:
    image: "traefik:v3.2"
    container_name: "traefik"
    command:
      - "--configfile=/etc/traefik/traefik.yml"
    ports:
      - "443:443"
      - "8080:8080"
    volumes:
      - "./letsencrypt:/letsencrypt"
      - "./traefik.yml:/etc/traefik/traefik.yml:ro"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    networks:
      - app-network

  nginx:
    image: nginx:stable-alpine
    container_name: nginx-certified-builder
    restart: unless-stopped
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
    ports:
      - "80:80"
    depends_on:
      - app
    networks:
      - app-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nginx.rule=PathPrefix(`/`)"
      - "traefik.http.routers.nginx.entrypoints=websecure"
      - "traefik.http.routers.nginx.tls.certresolver=myresolver"
      - "traefik.http.services.nginx.loadbalancer.server.port=80"

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: certified-builder-api
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      - SPRING_DATA_MONGODB_URI=${MONGO_URI}
      - SPRING_PROFILES_ACTIVE=prod
      - URL_SERVICE_TECH=${URL_SERVICE_TECH}
      - API_KEY=${API_KEY}
      - AWS_ACCESS_KEY=${AWS_ACCESS_KEY}
      - AWS_SECRET_KEY=${AWS_SECRET_KEY}
      - AWS_REGION=${AWS_REGION}
      - QUEUE_NAME_NOTIFICATION_GENERATION=${QUEUE_NAME_NOTIFICATION_GENERATION}
      - QUEUE_NAME_BUILDER=${QUEUE_NAME_BUILDER}
      - S3_BUCKET_NAME=${S3_BUCKET_NAME}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=PathPrefix(`/api`)"
      - "traefik.http.middlewares.api-strip.stripprefix.prefixes=/api"
      - "traefik.http.middlewares.api-strip.stripprefix.forceslash=false"
      - "traefik.http.routers.api.middlewares=api-strip@docker"
      - "traefik.http.routers.api.entrypoints=websecure"
      - "traefik.http.routers.api.tls.certresolver=myresolver"
      - "traefik.http.services.api.loadbalancer.server.port=8081"
    depends_on:
      - mongodb
    networks:
      - app-network

  mongodb:
    container_name: mongodb-certified-builder-prod
    image: mongodb/mongodb-community-server:7.0.16-ubuntu2204
    restart: unless-stopped
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
    volumes:
      - mongodb_data:/data/db
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  mongodb_data:
